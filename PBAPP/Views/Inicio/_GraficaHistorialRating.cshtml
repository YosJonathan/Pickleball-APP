@using PBAPP.Herramientas
@using PBAPP.Modelos.RatingUsuario
@using System.Text.Json
@model List<PBAPP.Modelos.RatingUsuario.RatingPorFecha>
@{
    List<RatingPorFecha> ratingPorFechas = Model as List<RatingPorFecha>;

    var fechas = ratingPorFechas?.Select(x => x.Fecha.ToString("yyyy-MM-dd")) ?? new List<string>();
    var singles = ratingPorFechas?.Select(x => x.Singles) ?? new List<double>();
    var doubles = ratingPorFechas?.Select(x => x.Doubles) ?? new List<double>();
}

<div class="col-span-1 md:col-span-1 lg:col-span-2 bg-gray-800 rounded-xl p-4 sm:p-6 border border-gray-700">
    <h2 class="text-lg sm:text-xl font-semibold text-white mb-4 flex items-center">
        <span class="material-symbols-outlined mr-2">trending_up</span> Ranking  @Fechas.ObtenerNombreMes(DateTime.Now)
    </h2>
    <div class="h-48 sm:h-64 rounded-lg p-4">
        <canvas id="graficoRating" class="w-full h-64 bg-transparent"></canvas>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script >
    const labels = JSON.parse('@Html.Raw(JsonSerializer.Serialize(fechas))');
    const singlesData = JSON.parse('@Html.Raw(JsonSerializer.Serialize(singles))');
    const doublesData = JSON.parse('@Html.Raw(JsonSerializer.Serialize(doubles))');
            </script>


<script >
    const ctx = document.getElementById('graficoRating').getContext('2d');

const lineChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: labels,
        datasets: [
            {
                label: 'Singles',
                data: singlesData,
                borderColor: '#3b82f6',
                backgroundColor: 'rgba(59, 130, 246, 0.2)',
                tension: 0.4,
            },
            {
                label: 'Doubles',
                data: doublesData,
                borderColor: '#10b981',
                backgroundColor: 'rgba(16, 185, 129, 0.2)',
                tension: 0.4,
            }
        ]
    },
    options: {
        backgroundColor: 'transparent',
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
            legend: {
                labels: {
                    color: '#ffffff'
                }
            }
        },
        scales: {
            x: {
                ticks: {
                    color: '#ffffff'
                },
                grid: {
                    color: 'rgba(255, 255, 255, 0.1)'
                }
            },
            y: {
                ticks: {
                    color: '#ffffff'
                },
                grid: {
                    color: 'rgba(255, 255, 255, 0.1)'
                }
            }
        }
    }
});
</script>